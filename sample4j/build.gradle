plugins {
    id 'java'
}

sourceCompatibility = 1.8
version = '1.0'

repositories {
    mavenCentral()
    mavenLocal()
}

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

dependencies {
    implementation 'ch.qos.logback:logback-core:1.3.14'
    implementation 'ch.qos.logback:logback-classic:1.3.14'
    implementation 'org.slf4j:jul-to-slf4j:1.7.12'
    implementation 'org.slf4j:log4j-over-slf4j:1.7.12'
    implementation 'org.slf4j:slf4j-api:1.7.12'
    testImplementation 'junit:junit:4.13.1'
    testImplementation 'org.powermock:powermock-core:2.0.4'
    testImplementation 'org.powermock:powermock-api-support:2.0.4'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.4'
    testImplementation 'org.powermock:powermock-module-junit4-common:2.0.4'
    testImplementation 'org.powermock:powermock-reflect:2.0.4'
    testImplementation 'org.openjdk.jmh:jmh-core:1.21'
    testImplementation 'org.openjdk.jmh:jmh-generator-annprocess:1.21'
    // see in https://docs.gradle.org/current/userguide/java_testing.html#executing_legacy_tests_with_junit_vintage
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter:5.7.1'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.7.1'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.7.1'
}

test {
    useJUnitPlatform()
    jvmArgs '-DsampleLib=../target/release/libsample.so'
    exclude '**/**Suite'
}

jar {
    into 'resources', {
        from '../target/release/*.so'
    }
}
